@page "/report/{category}"

<div class="formbtn">
    <TelerikButton Class="telerincbtn" ThemeColor="@ThemeConstants.Button.ThemeColor.Primary"><p class="btntext">생성</p></TelerikButton>
</div>

<div style="margin:2% 5% 0px 5%">
    <TelerikGrid Data="@Dailys" Pageable="true" Sortable="true">
        
        <GridToolBar>
            <GridCommandButton Command="ExcelExport" Icon="file-excel">Export to Excel</GridCommandButton>
            @*<label class="k-checkbox-label"><TelerikCheckBox @bind-Value="@ExportAllPages" />Export All Pages</label>*@
        </GridToolBar>

        <DetailTemplate>
            <div class="k-card-deck" style="">
                <TelerikCard Width="830px">
                    <CardHeader>
                        <CardTitle>금일</CardTitle>
                    </CardHeader>
                    <CardBody>
                        <div class="k-card-deck">
                            @foreach(var item in menus)
                            {
                                <TelerikCard Width="250px">
                                    <CardHeader>
                                        <CardTitle>@item</CardTitle>
                                    </CardHeader>
                                    <CardBody>
                                        <CardTitle>프로젝트</CardTitle>
                                        <CardSubTitle>2022-10 ~ 2023-04</CardSubTitle>
                                        <CardSeparator></CardSeparator>
                                        <p>
                                            진행하는 프로젝트
                                            현재 진행중
                                        </p>
                                        <CardFooter>
                                            <span style="float:left">담당자</span>
                                            <span style="float:right">asd</span>
                                        </CardFooter>
                                    </CardBody>
                                </TelerikCard>
                            }
                        </div>
                    </CardBody>
                </TelerikCard>
                <TelerikCard Width="830px">
                    <CardHeader>
                        <CardTitle>익일</CardTitle>
                    </CardHeader>
                    <CardBody>
                        <div class="k-card-deck">
                            @foreach(var item in menus)
                            {
                                <TelerikCard Width="250px">
                                    <CardHeader>
                                        <CardTitle>@item</CardTitle>
                                    </CardHeader>
                                    <CardBody>
                                        <CardTitle>프로젝트</CardTitle>
                                        <CardSubTitle>2022-10 ~ 2023-04</CardSubTitle>
                                        <CardSeparator></CardSeparator>
                                        <p>
                                            진행하는 프로젝트
                                            현재 진행중
                                        </p>
                                        <CardFooter>
                                            <span style="float:left">담당자</span>
                                            <span style="float:right">asd</span>
                                        </CardFooter>
                                    </CardBody>
                                </TelerikCard>
                            }
                        </div>
                    </CardBody>
                </TelerikCard>
            </div>
        </DetailTemplate>

        <GridColumns>
            <GridColumn Field="category" Title="프로젝트" />
            <GridColumn Field="title" Title="제목" />
            <GridColumn Field="writer" Title="작성자" />
            <GridColumn Field="managers" Title="담당자" />
            <GridColumn Field="important" Title="중요도" />
        </GridColumns>
    </TelerikGrid>
</div>


    @code {
    [Parameter]
    public string category { get; set; }

    private string[] menus = { "진행", "운영", "이슈" };
    private List<Daily> Dailys { get; set; }

    protected override void OnInitialized()
    {
        Dailys = new List<Daily>();

        if (category.Equals("국방부"))
        {
            Dailys.Add(new Daily { no = 0, category = "국방부", title = "20230101", writer = "나태훈", managers = "이창노, 심상민, 이성훈", important = "3"});
            Dailys.Add(new Daily { no = 1, category = "국방부", title = "20230102", writer = "나태훈", managers = "이창노, 심상민, 이성훈", important = "1"});
            Dailys.Add(new Daily { no = 2, category = "국방부", title = "20230103", writer = "나태훈", managers = "이창노, 심상민, 이성훈", important = "6"});
            Dailys.Add(new Daily { no = 3, category = "국방부", title = "20230104", writer = "나태훈", managers = "이창노, 심상민, 이성훈", important = "7"});
            Dailys.Add(new Daily { no = 4, category = "국방부", title = "20230105", writer = "나태훈", managers = "이창노, 심상민, 이성훈", important = "2"});
        }

        if (category.Equals("FIS"))
        {
            Dailys.Add(new Daily { no = 0, category = "FIS", title = "20230101", writer = "나태훈", managers = "김강한, 정민정", important = "3"});
            Dailys.Add(new Daily { no = 1, category = "FIS", title = "20230102", writer = "나태훈", managers = "김강한, 정민정", important = "1"});
            Dailys.Add(new Daily { no = 2, category = "FIS", title = "20230103", writer = "나태훈", managers = "김강한, 정민정", important = "6"});
            Dailys.Add(new Daily { no = 3, category = "FIS", title = "20230104", writer = "나태훈", managers = "김강한, 정민정", important = "7"});
            Dailys.Add(new Daily { no = 4, category = "FIS", title = "20230105", writer = "나태훈", managers = "김강한, 정민정", important = "2"});
        }

        if (category.Equals("방송통신대학교"))
        {
            Dailys.Add(new Daily { no = 0, category = "방송통신대학교", title = "20230101", writer = "나태훈", managers = "이창노, 김강한, 이희범", important = "3" });
            Dailys.Add(new Daily { no = 1, category = "방송통신대학교", title = "20230102", writer = "나태훈", managers = "이창노, 김강한, 이희범", important = "1" });
            Dailys.Add(new Daily { no = 2, category = "방송통신대학교", title = "20230103", writer = "나태훈", managers = "이창노, 김강한, 이희범", important = "6" });
            Dailys.Add(new Daily { no = 3, category = "방송통신대학교", title = "20230104", writer = "나태훈", managers = "이창노, 김강한, 이희범", important = "7" });
            Dailys.Add(new Daily { no = 4, category = "방송통신대학교", title = "20230105", writer = "나태훈", managers = "이창노, 김강한, 이희범", important = "2" });
        }

        if (category.Equals("제주은행"))
        {
            Dailys.Add(new Daily { no = 0, category = "제주은행", title = "20230101", writer = "나태훈", managers = "이창노, 김강한, 나태훈", important = "3" });
            Dailys.Add(new Daily { no = 1, category = "제주은행", title = "20230102", writer = "나태훈", managers = "이창노, 김강한, 나태훈", important = "1" });
            Dailys.Add(new Daily { no = 2, category = "제주은행", title = "20230103", writer = "나태훈", managers = "이창노, 김강한, 나태훈", important = "6" });
            Dailys.Add(new Daily { no = 3, category = "제주은행", title = "20230104", writer = "나태훈", managers = "이창노, 김강한, 나태훈", important = "7" });
            Dailys.Add(new Daily { no = 4, category = "제주은행", title = "20230105", writer = "나태훈", managers = "이창노, 김강한, 나태훈", important = "2" });
        }

        base.OnInitialized();
    }

}

<style>
    .telerincbtn{
        height:35px;
    }
</style>
